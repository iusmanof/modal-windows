/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}a:link{text-decoration:none;color:#fff}.block-1,.footer,.header,.header__menu-item{padding:1%}body{font-family:Fira Sans,sans-serif;font-size:bold;color:#fff}body.lock{overflow:hidden}.wrapper{display:flex;flex-direction:column;justify-content:space-between;min-height:100vh;background-image:url(assets/laminat.jpg);background-repeat:no-repeat;background-size:100% 100%}.header{background:rgba(255,187,80,.8);position:fixed}.header__menu{width:100vw}.header__menu-list{display:flex;flex-wrap:wrap;justify-content:flex-end;margin-right:8%;max-width:100vw}.header__menu-item{list-style-type:none}.header__menu-link{font-size:1.3rem;font-weight:600;color:#fff;cursor:pointer}.header__menu-link:hover{padding-bottom:2px;border-bottom:1px solid #fff}.block-1{margin:0 auto;max-width:80vw;background:rgba(255,187,50,.1)}.block-1:first-child{margin-top:7vh}.block-1__title{padding:1% 0;font-weight:400;font-size:1.8rem;letter-spacing:1px;line-height:130%}.block-1__text{text-align:justify;font-weight:200;font-size:1.1rem;line-height:110%}.footer{text-align:center;word-spacing:3px;font-weight:200;font-size:.9rem;background:rgba(255,187,80,.4)}.popup-css{position:fixed;width:100%;height:100%;background-color:rgba(0,0,0,.5);top:0;left:0;opacity:0;visibility:hidden;overflow-y:auto;overflow-x:hidden;transition:all .8s ease 0s}.popup-css:target{opacity:1;visibility:visible}.popup-css:target .popup-css__content{transform:perspective(600px) translate(0) rotateX(0deg);opacity:1}.popup-css__body{display:flex;align-items:center;justify-content:center;padding:10%;min-height:100vh}.popup-css__content{position:relative;max-width:30vw;padding:2vw;background-color:rgba(48,213,170,.8);color:rgba(0,0,0,.8);transition:all .8s ease 0s;opacity:0;transform:perspective(600px) translateY(-100%) rotateX(45deg)}.popup-css__close{position:absolute;right:10px;top:10px}.popup-css__close-icon{height:2vw}.popup-css__title{font-weight:400;font-size:1.4rem;margin-bottom:3vh}.popup-css__text{text-align:center;font-weight:200;font-size:.9rem;text-align:justify}.popup-css__area{position:absolute}.popup,.popup-css__area{width:100%;height:100%;top:0;left:0}.popup{position:fixed;background-color:rgba(0,0,0,.5);opacity:0;visibility:hidden;overflow-y:auto;overflow-x:hidden;transition:all .8s ease 0s}.popup.open{opacity:1;visibility:visible}.popup.open .popup__content{transform:perspective(600px) translate(0) rotateX(0deg);opacity:1}.popup__body{display:flex;align-items:center;justify-content:center;padding:10%;min-height:100vh}.popup__content{position:relative;max-width:30vw;padding:2vw;background-color:rgba(70,113,213,.8);color:rgba(0,0,0,.8);transition:all .8s ease 0s;opacity:0;transform:perspective(600px) translateY(-100%) rotateX(45deg)}.popup__close{position:absolute;right:10px;top:10px}.popup__close-icon{height:2vw}.popup__title{font-weight:400;font-size:1.4rem;margin-bottom:3vh}.popup__text{text-align:center;font-weight:200;font-size:.9rem;text-align:justify}.popup__area{position:absolute;width:100%;height:100%;top:0;left:0}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/